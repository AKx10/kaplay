var m=(t,l,o)=>new Promise((r,n)=>{var i=e=>{try{c(o.next(e))}catch(a){n(a)}},s=e=>{try{c(o.throw(e))}catch(a){n(a)}},c=e=>e.done?r(e.value):Promise.resolve(e.value).then(i,s);c((o=o.apply(t,l)).next())});module.exports=t=>{function l(r){let n=new Image;return n.crossOrigin="",n.src=r,new Promise((i,s)=>{n.onload=()=>{i(n)},n.onerror=()=>{s()}})}function o(r,n){let i=t.newLoader();return new Promise((s,c)=>{fetch(t.loadRoot()+n).then(e=>e.json()).then(e=>m(this,null,function*(){let a=yield Promise.all(e.frames.map(l)),h=document.createElement("canvas");h.width=e.width,h.height=e.height*e.frames.length;let g=h.getContext("2d");return a.forEach((d,f)=>{g.drawImage(d,0,f*e.height)}),t.loadSprite(r,h,{sliceY:e.frames.length,anims:e.anims})})).then(e=>{s(e)}).catch(()=>{error(`failed to load sprite '${r}' from '${n}'`),c()}).finally(()=>{i.done()})})}return{loadPedit:o}};
//# sourceMappingURL=pedit.min.cjs.map
