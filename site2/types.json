{
    "kaboom": {
        "kind": "FunctionDeclaration",
        "name": "kaboom",
        "parameters": [
            {
                "kind": "Parameter",
                "name": "conf",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "KaboomConf"
                },
                "questionToken": true
            }
        ],
        "type": {
            "kind": "TypeReference",
            "typeName": "KaboomCtx"
        },
        "jsDoc": [
            {
                "kind": "JSDocComment",
                "comment": "Initialize kaboom context."
            }
        ]
    },
    "KaboomCtx": {
        "kind": "InterfaceDeclaration",
        "name": "KaboomCtx",
        "members": [
            {
                "kind": "MethodSignature",
                "name": "burp",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "AudioPlayConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AudioPlay"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Yep."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loadRoot",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "path",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Sets the root for all subsequent resource urls.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nloadRoot(\"https://myassets.com/\");\nloadSprite(\"froggy\", \"sprites/froggy.png\"); // will resolve to \"https://myassets.com/sprites/frogg.png\"\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loadSprite",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "StringKeyword"
                                },
                                {
                                    "kind": "LiteralType",
                                    "literal": {
                                        "kind": "NullKeyword"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "src",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SpriteLoadSrc"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SpriteLoadConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Promise",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "SpriteData"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Load a sprite into asset manager, with name and resource url and optional config.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// due to browser policies you'll need a static file server to load local files\nloadSprite(\"froggy\", \"froggy.png\");\nloadSprite(\"apple\", \"https://kaboomjs.com/sprites/apple.png\");\n\n// slice a spritesheet and add anims manually\nloadSprite(\"froggy\", \"froggy.png\", {\n    sliceX: 4,\n    sliceY: 1,\n    anims: {\n        run: {\n            from: 0,\n            to: 3,\n        },\n        jump: {\n            from: 3,\n            to: 3,\n        },\n    },\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loadSound",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "src",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Promise",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "SoundData"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Load a sound into asset manager, with name and resource url.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nloadSound(\"shoot\", \"horse.ogg\");\nloadSound(\"shoot\", \"https://kaboomjs.com/sounds/scream6.mp3\");\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loadFont",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "src",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "gridWidth",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "gridHeight",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "chars",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Promise",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "FontData"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Load a bitmap font into asset manager, with name and resource url and infomation on the layout of the bitmap.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// load a bitmap font called \"04b03\", with bitmap \"fonts/04b03.png\"\n// each character on bitmap has a size of (6, 8), and contains default ASCII_CHARS\nloadFont(\"04b03\", \"fonts/04b03.png\", 6, 8);\n\n// load a font with custom characters\nloadFont(\"cp437\", \"cp437.png\", 6, 8, \"☺☻♥♦♣♠\");\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loadShader",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "name",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "vert",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    },
                    {
                        "kind": "Parameter",
                        "name": "frag",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    },
                    {
                        "kind": "Parameter",
                        "name": "isUrl",
                        "type": {
                            "kind": "BooleanKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Promise",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "ShaderData"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Load a shader into asset manager with vertex and fragment code / file url.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// load only a fragment shader from URL\nloadShader(\"outline\", null, \"/shaders/outline.glsl\", true);\n\n// default shaders and custom shader format\nloadShader(\"outline\",\n    `vec4 vert(vec3 pos, vec2 uv, vec4 color) {\n    // predefined functions to get the default value by kaboom\n    return def_vert();\n}`,\n`vec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n    // turn everything blue-ish\n    return def_frag() * vec4(0, 0, 1, 1);\n}`, true);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "load",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "l",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Promise",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Add a new loader to wait for before starting the game.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nload(new Promise((resolve, reject) => {\n    // anything you want to do that stalls the game in loading state\n    resolve(\"ok\");\n}));\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "width",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the width of game."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "height",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the height of game.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// add froggy to the center of the screen\nadd([\n    sprite(\"froggy\"),\n    pos(center()),\n    // ...\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "center",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the center point of view.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// add froggy to the center of the screen\nadd([\n    sprite(\"froggy\"),\n    pos(center()),\n    // ...\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "dt",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the delta time since last frame.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// rotate froggy 100 deg per second\nfroggy.action(() => {\n    froggy.angle += 100 * dt();\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "time",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the total time since beginning."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "screenshot",
                "parameters": [],
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Take a screenshot and get the dataurl of the image."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "focused",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If the game canvas is currently focused."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "focus",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Focus on the game canvas."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "ready",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run something when assets finished loading.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nconst froggy = add([\n    // ...\n]);\n\n// certain assets related data are only available when the game finishes loading\nready(() => {\n    debug.log(froggy.numFrames());\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "isTouch",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Is currently on a touch screen device."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "add",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "Comp"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "comps",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "CompList",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GameObj",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Assembles a game obj from list of components or tags and add it to scene.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nconst player = add([\n    // it renders as a sprite\n    sprite(\"mark\"),\n    // it has a position\n    pos(100, 200),\n    // it has a collider\n    area(),\n    // it is a physical body which will respond to physics\n    body(),\n    // you can easily make custom components to encapsulate reusable logics\n    doubleJump(),\n    health(8),\n    // give it tags for controlling group behaviors\n    \"player\",\n    \"friendly\",\n    // plain objects fields are directly assigned to the game obj\n    {\n        dir: vec2(-1, 0),\n        dead: false,\n        speed: 240,\n    },\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "readd",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "obj",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GameObj",
                    "typeArguments": [
                        {
                            "kind": "AnyKeyword"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Remove and re-add the game obj.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// mainly useful when you want to make something to draw on top\nreadd(froggy);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "getComps",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "Comp"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "comps",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DynCompList",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "args",
                        "dotDotDotToken": {
                            "kind": "DotDotDotToken"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "CompList",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get CompList<T> from DynCompList<T>."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "destroy",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "obj",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Remove the game obj.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// every time froggy collides with anything with tag \"fruit\", remove it\nfroggy.collides(\"fruit\", (fruit) => {\n    destroy(fruit);\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "destroyAll",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Remove all game objs with certain tag.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// destroy all objects with tag \"bomb\" when you click one\nclicks(\"bomb\", () => {\n    destroyAll(\"bomb\");\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "get",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "GameObj",
                        "typeArguments": [
                            {
                                "kind": "AnyKeyword"
                            }
                        ]
                    }
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get a list of all game objs with certain tag.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// get a list of all game objs with tag \"bomb\"\nconst allBombs = get(\"bomb\");\n\n// without args returns all current objs in the game\nconst allObjs = get();\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "every",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "T"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "T"
                    }
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run callback on every game obj with certain tag.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// how destroyAll() works\nevery(\"fruit\", destroy);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "every",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "T"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "T"
                    }
                }
            },
            {
                "kind": "MethodSignature",
                "name": "revery",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "T"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "T"
                    }
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run callback on every game obj with certain tag in reverse order."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "revery",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "T"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "T"
                    }
                }
            },
            {
                "kind": "MethodSignature",
                "name": "layers",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "list",
                        "type": {
                            "kind": "ArrayType",
                            "elementType": {
                                "kind": "StringKeyword"
                            }
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "def",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Define layers (the last one will be on top).",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// defining 3 layers, \"ui\" will be drawn on top most, with default layer being \"game\"\nlayers([\n    \"bg\",\n    \"game\",\n    \"ui\",\n], \"game\");\n\n// use layer() comp to define which layer an obj belongs to\nadd([\n    text(score),\n    layer(\"ui\"),\n    fixed(),\n]);\n\n// without layer() comp it'll fall back to default layer, which is \"game\"\nadd([\n    sprite(\"froggy\"),\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "on",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "event",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register an event on all game objs with certain tag.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// a custom event defined by body() comp\n// every time an obj with tag \"bomb\" hits the floor, destroy it and addKaboom()\non(\"grounded\", \"bomb\", (bomb) => {\n    destroy(bomb);\n    addKaboom();\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "action",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register \"update\" event (runs every frame) on all game objs with certain tag.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// move every \"tree\" 120 pixels per second to the left, destroy it when it leaves screen\n// there'll be nothing to run if there's no \"tree\" obj in the scene\naction(\"tree\", (tree) => {\n    tree.move(-120, 0);\n    if (tree.pos.x < 0) {\n        destroy(tree);\n    }\n});\n\n// without tags it just runs it every frame\naction(() => {\n    debug.log(\"ohhi\");\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "action",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "render",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register \"draw\" event (runs every frame) on all game objs with certain tag."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "render",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "collides",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "t2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "a",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "kind": "Parameter",
                                    "name": "b",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register event when 2 game objs with certain tags collides. This function spins off an action() when called, please put it at root level and never inside another action().",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\ncollides(\"sperm\", \"uterus\", () => {\n    addBaby();\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "overlaps",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "t2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "a",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "kind": "Parameter",
                                    "name": "b",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register event when 2 game objs with certain tags overlaps. This function spins off an action() when called, please put it at root level and never inside another action()."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "clicks",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "a",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Register event when game objs with certain tags are clicked. This function spins off an action() when called, please put it at root level and never inside another action()."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "camPos",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "pos",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get / set camera position.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// camera follows player\nplayer.action(() => {\n    camPos(player.pos);\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "camScale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "scale",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get / set camera scale."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "camRot",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "angle",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get / set camera rotation."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "shake",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "intensity",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Camera shake.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// shake intensively when froggy collides with a \"bomb\"\nfroggy.collides(\"bomb\", () => {\n    shake(120);\n});\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "gravity",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "g",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get / set gravity."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "pos",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "x",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "y",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "PosComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Position"
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "pos",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "xy",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "PosComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "pos",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "PosComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "pos",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "PosComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "x",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "y",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ScaleComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Scale."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "xy",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ScaleComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "s",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ScaleComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ScaleComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rotate",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "RotateComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Rotate (in degrees)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "color",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "r",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "g",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ColorComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Custom color in RGBA (0-255 rgb, 0-1 a, multiplied).",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// blue frog\nadd([\n    sprite(\"froggy\"),\n    color(0, 0, 255)\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "color",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "c",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Color"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ColorComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "color",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ColorComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "origin",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "o",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "Origin"
                                },
                                {
                                    "kind": "TypeReference",
                                    "typeName": "Vec2"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "OriginComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Origin point for render (default \"topleft\").",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// set origin to \"center\" so it'll rotate from center\nadd([\n    rect(40, 10),\n    rotate(45),\n    origin(\"center\"),\n]);\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "layer",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "l",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "LayerComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Which layer this object belongs to."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "area",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AreaComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Collider. Calculate from rendered dimension (e.g. from sprite, text, rect) if no params given.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\nadd([\n    sprite(\"froggy\"),\n    // without args it'll auto calculate from the data sprite comp provides\n    area(),\n]);\n\nadd([\n    sprite(\"froggy\"),\n    // when pass a single number it'll scale the auto calculated area by 0.6\n    area(0.6),\n]);\n\n// define custom area with topleft and botright point\nadd([\n    area(vec2(-10, -30), vec2(10, 60)),\n])\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "area",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "scale",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AreaComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "area",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "sx",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "sy",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AreaComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "area",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "p2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AreaComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "sprite",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "spr",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "StringKeyword"
                                },
                                {
                                    "kind": "TypeReference",
                                    "typeName": "SpriteData"
                                }
                            ]
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SpriteCompConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "SpriteComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Renders as sprite.",
                        "tags": [
                            {
                                "kind": "FirstJSDocTagNode",
                                "tagName": "example",
                                "comment": "```js\n// minimal setup\nadd([\n    sprite(\"froggy\"),\n]);\n\n// minimal setup\nconst froggy = add([\n    sprite(\"froggy\", {\n        // seconds per frame (default 0.1)\n        animSpeed: 0.2,\n        // start with frame 2\n        frame: 2,\n    }),\n]);\n\n// play an anim\nfroggy.play(\"jump\");\n```"
                            }
                        ]
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "text",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "TextCompConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "TextComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Renders as text."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rect",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "w",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "RectComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Renders as rect."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rect",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "p2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "RectComp"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "outline",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "width",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    },
                    {
                        "kind": "Parameter",
                        "name": "color",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Color"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "OutlineComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Give obj an outline."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "body",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "BodyCompConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "BodyComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Physical body that responds to gravity."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "shader",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "ShaderComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Custom shader."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "timer",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    },
                    {
                        "kind": "Parameter",
                        "name": "action",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "TimerComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Run certain action after some time."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "solid",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "SolidComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Make other objects cannot move pass."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "fixed",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "FixedComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Unaffected by camera."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "stay",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "StayComp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "<Comp> Don't get destroyed on scene switch."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "cursor",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "c",
                        "type": {
                            "kind": "StringKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get / set the cursor (css)"
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mousePos",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get current mouse position (after camera transform)"
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mousePosRaw",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get current mouse position (without camera transform)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseDeltaPos",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "How much mouse moved last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyDown",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs every frame when a key is down."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyPress",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user presses certain key."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyPressRep",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user presses certain key (also fires repeatedly when they key is held)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyRelease",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user releases certain key."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "charInput",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "ch",
                                    "type": {
                                        "kind": "StringKeyword"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user inputs text."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseDown",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs every frame when mouse button is down."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseClick",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user clicks mouse."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseRelease",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when user releases mouse."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseMove",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs whenever user move the mouse."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "touchStart",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "id",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "TouchID"
                                    }
                                },
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when a touch starts."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "touchMove",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "id",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "TouchID"
                                    }
                                },
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs whenever touch moves."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "touchEnd",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "id",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "TouchID"
                                    }
                                },
                                {
                                    "kind": "Parameter",
                                    "name": "pos",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "Vec2"
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event that runs when a touch ends."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyIsDown",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If certain key is currently down."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyIsPressed",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If certain key is just pressed last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyIsPressedRep",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If certain key is just pressed last frame (accepts help down repeatedly)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "keyIsReleased",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "k",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If certain key is just released last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseIsDown",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If certain mouse is currently down."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseIsClicked",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If mouse is just clicked last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseIsReleased",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If mouse is just released last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mouseIsMoved",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If mouse moved last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "loop",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run the callback every n seconds."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "wait",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Promise",
                    "typeArguments": [
                        {
                            "kind": "VoidKeyword"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run the callback after n seconds."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "play",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "AudioPlayConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AudioPlay"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Play a piece of audio, returns a handle to control."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "volume",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "v",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Sets global volume."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "audioCtx",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AudioContext"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the underlying browser AudioContext."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "makeRng",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "seed",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "RNG"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Make a new random number generator."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rand",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get a random number (with optional bounds)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rand",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "RNGValue"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rand",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "RNGValue"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "randSeed",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "seed",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "vec2",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "x",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "y",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Make a 2d vector."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "vec2",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "vec2",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "xy",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "vec2",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rgb",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "r",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "g",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Make an opaque color from 0-1 rgb values."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rgba",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "r",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "g",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Make a color from 0-1 rgba values."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "quad",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "x",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "y",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "w",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Make a quad."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "choose",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "lst",
                        "type": {
                            "kind": "ArrayType",
                            "elementType": {
                                "kind": "TypeReference",
                                "typeName": "T"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Choose a random item from a list."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "chance",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "rand(1) <= p"
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "lerp",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "from",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "to",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Linear interpolation."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "map",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "v",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "l1",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h1",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "l2",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h2",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Map a value from one range to another range."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "mapc",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "v",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "l1",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h1",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "l2",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h2",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Map a value from one range to another range, and clamp to the dest range."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "wave",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "lo",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "hi",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Sin() motion between 2 values."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "deg2rad",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "deg",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Convert degrees to radians."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "rad2deg",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "rad",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Convert radians to degrees."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "drawSprite",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "StringKeyword"
                                },
                                {
                                    "kind": "TypeReference",
                                    "typeName": "SpriteData"
                                }
                            ]
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DrawSpriteConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawText",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "txt",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeLiteral",
                            "members": []
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawRect",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "pos",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "w",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DrawRectConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawRectStroke",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "pos",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "w",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "h",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DrawRectStrokeConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawLine",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "p2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DrawLineConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawTri",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p1",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "p2",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "p3",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "conf",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "DrawTriConf"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scene",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SceneID"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "def",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SceneDef"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Define a scene."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "go",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "SceneID"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "args",
                        "dotDotDotToken": {
                            "kind": "DotDotDotToken"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Go to a scene, passing all rest args to scene callback."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "getData",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "key",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "def",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get data from local storage, if not present can set to a default value."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "setData",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "key",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "data",
                        "type": {
                            "kind": "AnyKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Set data from local storage."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "plug",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T"
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "plugin",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "KaboomPlugin",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "IntersectionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "MergeObj",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "KaboomCtx"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Import a plugin."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "debug",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Debug"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Debug stuff."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "ASCII_CHARS",
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "All chars in ASCII."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "CP437_CHARS",
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "All chars in CP437."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "canvas",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "HTMLCanvasElement"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The canvas DOM kaboom is currently using."
                    }
                ]
            },
            {
                "kind": "IndexSignature",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "custom",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "AnyKeyword"
                }
            }
        ],
        "jsDoc": [
            {
                "kind": "JSDocComment",
                "comment": "Context handle that contains every kaboom function."
            }
        ]
    },
    "Tag": {
        "kind": "TypeAliasDeclaration",
        "name": "Tag",
        "type": {
            "kind": "StringKeyword"
        }
    },
    "CustomData": {
        "kind": "TypeAliasDeclaration",
        "name": "CustomData",
        "type": {
            "kind": "TypeReference",
            "typeName": "Record",
            "typeArguments": [
                {
                    "kind": "StringKeyword"
                },
                {
                    "kind": "AnyKeyword"
                }
            ]
        }
    },
    "CompList": {
        "kind": "TypeAliasDeclaration",
        "name": "CompList",
        "typeParameters": [
            {
                "kind": "TypeParameter",
                "name": "T",
                "constraint": {
                    "kind": "TypeReference",
                    "typeName": "Comp"
                }
            }
        ],
        "type": {
            "kind": "TypeReference",
            "typeName": "Array",
            "typeArguments": [
                {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "T"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "CustomData"
                        }
                    ]
                }
            ]
        }
    },
    "DynCompList": {
        "kind": "TypeAliasDeclaration",
        "name": "DynCompList",
        "typeParameters": [
            {
                "kind": "TypeParameter",
                "name": "T",
                "constraint": {
                    "kind": "TypeReference",
                    "typeName": "Comp"
                }
            }
        ],
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "CompList",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    ]
                },
                {
                    "kind": "ParenthesizedType",
                    "type": {
                        "kind": "FunctionType",
                        "parameters": [
                            {
                                "kind": "Parameter",
                                "name": "args",
                                "dotDotDotToken": {
                                    "kind": "DotDotDotToken"
                                }
                            }
                        ],
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "CompList",
                            "typeArguments": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "T"
                                }
                            ]
                        }
                    }
                }
            ]
        }
    },
    "GameObjRaw": {
        "kind": "InterfaceDeclaration",
        "name": "GameObjRaw",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "_id",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "NumberKeyword"
                        },
                        {
                            "kind": "LiteralType",
                            "literal": {
                                "kind": "NullKeyword"
                            }
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Internal GameObj ID."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "hidden",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If draw the game obj (run \"draw\" event or not)."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "paused",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If update the game obj (run \"update\" event or not)."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "exists",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If game obj exists in scene."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "is",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "Tag"
                                },
                                {
                                    "kind": "ArrayType",
                                    "elementType": {
                                        "kind": "TypeReference",
                                        "typeName": "Tag"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If there a certain tag on the game obj."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "use",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "comp",
                        "type": {
                            "kind": "UnionType",
                            "types": [
                                {
                                    "kind": "TypeReference",
                                    "typeName": "Comp"
                                },
                                {
                                    "kind": "TypeReference",
                                    "typeName": "Tag"
                                },
                                {
                                    "kind": "TypeReference",
                                    "typeName": "CustomData"
                                }
                            ]
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Add a component or tag."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "unuse",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "comp",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "CompID"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Remove a component with its id."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "action",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run something every frame for this game obj (sugar for on(\"update\"))."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "on",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "ev",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "trigger",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "ev",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "args",
                        "dotDotDotToken": {
                            "kind": "DotDotDotToken"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Triggers an event."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "untag",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Removes a tag."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "destroy",
                "parameters": [],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Remove the game obj from scene."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "c",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "id",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "CompID"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Comp"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get state for a specific comp."
                    }
                ]
            }
        ]
    },
    "KaboomConf": {
        "kind": "InterfaceDeclaration",
        "name": "KaboomConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "scale",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "stretch",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "letterbox",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "debug",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "font",
                "type": {
                    "kind": "StringKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "crisp",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "canvas",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "HTMLCanvasElement"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "root",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "HTMLElement"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "clearColor",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "NumberKeyword"
                    }
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "inspectColor",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "NumberKeyword"
                    }
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "texFilter",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "TexFilter"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "logMax",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "connect",
                "type": {
                    "kind": "StringKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "touchToMouse",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "global",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "plugins",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "KaboomPlugin",
                        "typeArguments": [
                            {
                                "kind": "AnyKeyword"
                            }
                        ]
                    }
                },
                "questionToken": true
            }
        ],
        "jsDoc": [
            {
                "kind": "JSDocComment",
                "comment": "Kaboom configurations."
            }
        ]
    },
    "GameObj": {
        "kind": "TypeAliasDeclaration",
        "name": "GameObj",
        "typeParameters": [
            {
                "kind": "TypeParameter",
                "name": "T"
            }
        ],
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "GameObjRaw"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "MergeComps",
                    "typeArguments": [
                        {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    ]
                }
            ]
        }
    },
    "SceneID": {
        "kind": "TypeAliasDeclaration",
        "name": "SceneID",
        "type": {
            "kind": "StringKeyword"
        }
    },
    "SceneDef": {
        "kind": "TypeAliasDeclaration",
        "name": "SceneDef",
        "type": {
            "kind": "FunctionType",
            "parameters": [
                {
                    "kind": "Parameter",
                    "name": "args",
                    "dotDotDotToken": {
                        "kind": "DotDotDotToken"
                    }
                }
            ],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "TouchID": {
        "kind": "TypeAliasDeclaration",
        "name": "TouchID",
        "type": {
            "kind": "NumberKeyword"
        }
    },
    "EventCanceller": {
        "kind": "TypeAliasDeclaration",
        "name": "EventCanceller",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "SpriteAnim": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteAnim",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "from",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "to",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "KaboomPlugin": {
        "kind": "TypeAliasDeclaration",
        "name": "KaboomPlugin",
        "typeParameters": [
            {
                "kind": "TypeParameter",
                "name": "T"
            }
        ],
        "type": {
            "kind": "FunctionType",
            "parameters": [
                {
                    "kind": "Parameter",
                    "name": "k",
                    "type": {
                        "kind": "TypeReference",
                        "typeName": "KaboomCtx"
                    }
                }
            ],
            "type": {
                "kind": "TypeReference",
                "typeName": "T"
            }
        }
    },
    "SpriteLoadConf": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteLoadConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "sliceX",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "sliceY",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "gridWidth",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "gridHeight",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "anims",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Record",
                    "typeArguments": [
                        {
                            "kind": "StringKeyword"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "SpriteAnim"
                        }
                    ]
                },
                "questionToken": true
            }
        ]
    },
    "SpriteLoadSrc": {
        "kind": "TypeAliasDeclaration",
        "name": "SpriteLoadSrc",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "StringKeyword"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "GfxTextureData"
                }
            ]
        }
    },
    "SpriteData": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteData",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "tex",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GfxTexture"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "frames",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "Quad"
                    }
                }
            },
            {
                "kind": "PropertySignature",
                "name": "anims",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Record",
                    "typeArguments": [
                        {
                            "kind": "StringKeyword"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "SpriteAnim"
                        }
                    ]
                }
            }
        ]
    },
    "SoundData": {
        "kind": "TypeAliasDeclaration",
        "name": "SoundData",
        "type": {
            "kind": "TypeReference",
            "typeName": "AudioBuffer"
        }
    },
    "FontData": {
        "kind": "TypeAliasDeclaration",
        "name": "FontData",
        "type": {
            "kind": "TypeReference",
            "typeName": "GfxFont"
        }
    },
    "ShaderData": {
        "kind": "TypeAliasDeclaration",
        "name": "ShaderData",
        "type": {
            "kind": "TypeReference",
            "typeName": "GfxProgram"
        }
    },
    "AudioPlayConf": {
        "kind": "InterfaceDeclaration",
        "name": "AudioPlayConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "loop",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "volume",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "speed",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "detune",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "seek",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            }
        ]
    },
    "AudioPlay": {
        "kind": "InterfaceDeclaration",
        "name": "AudioPlay",
        "members": [
            {
                "kind": "MethodSignature",
                "name": "play",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "seek",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "stop",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "pause",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "paused",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "stopped",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "speed",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "s",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "detune",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "d",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "volume",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "v",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "time",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "duration",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "loop",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "unloop",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "GfxProgram": {
        "kind": "InterfaceDeclaration",
        "name": "GfxProgram",
        "members": [
            {
                "kind": "MethodSignature",
                "name": "bind",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "unbind",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "bindAttribs",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "send",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "uniform",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Uniform"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "GfxTexture": {
        "kind": "InterfaceDeclaration",
        "name": "GfxTexture",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "bind",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "unbind",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "GfxTextureData": {
        "kind": "TypeAliasDeclaration",
        "name": "GfxTextureData",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "HTMLImageElement"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "HTMLCanvasElement"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "ImageData"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "ImageBitmap"
                }
            ]
        }
    },
    "GfxFont": {
        "kind": "InterfaceDeclaration",
        "name": "GfxFont",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "tex",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GfxTexture"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "map",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Record",
                    "typeArguments": [
                        {
                            "kind": "StringKeyword"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    ]
                }
            },
            {
                "kind": "PropertySignature",
                "name": "qw",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "qh",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "Vertex": {
        "kind": "InterfaceDeclaration",
        "name": "Vertex",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "pos",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec3"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "uv",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "color",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            }
        ]
    },
    "TexFilter": {
        "kind": "TypeAliasDeclaration",
        "name": "TexFilter",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "nearest",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "linear",
                        "hasExtendedUnicodeEscape": false
                    }
                }
            ]
        }
    },
    "RenderProps": {
        "kind": "InterfaceDeclaration",
        "name": "RenderProps",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "pos",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "scale",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        },
                        {
                            "kind": "NumberKeyword"
                        }
                    ]
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "rot",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "color",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "origin",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "Origin"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    ]
                },
                "questionToken": true
            }
        ]
    },
    "DrawQuadConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawQuadConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "flipX",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "flipY",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "height",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "tex",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxTexture"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "quad",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Quad"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawTextureConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawTextureConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "flipX",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "flipY",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "height",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "tiled",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "quad",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Quad"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawRectStrokeConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawRectStrokeConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawRectConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawRectConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawLineConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawLineConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawTriConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawTriConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "DrawTextConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawTextConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "size",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "GfxProgram"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "FormattedChar": {
        "kind": "InterfaceDeclaration",
        "name": "FormattedChar",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "tex",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GfxTexture"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "quad",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "ch",
                "type": {
                    "kind": "StringKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "pos",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "scale",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "color",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "origin",
                "type": {
                    "kind": "StringKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "z",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "FormattedText": {
        "kind": "InterfaceDeclaration",
        "name": "FormattedText",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "chars",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "FormattedChar"
                    }
                }
            }
        ]
    },
    "Origin": {
        "kind": "TypeAliasDeclaration",
        "name": "Origin",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "topleft",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "top",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "topright",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "left",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "center",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "right",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "botleft",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "bot",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "botright",
                        "hasExtendedUnicodeEscape": false
                    }
                }
            ]
        }
    },
    "DrawSpriteConf": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawSpriteConf",
        "type": {
            "kind": "IntersectionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "RenderProps"
                },
                {
                    "kind": "TypeLiteral",
                    "members": [
                        {
                            "kind": "PropertySignature",
                            "name": "frame",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "width",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "height",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "tiled",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "flipX",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "flipY",
                            "type": {
                                "kind": "BooleanKeyword"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "quad",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Quad"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "prog",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "ShaderData"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "uniform",
                            "type": {
                                "kind": "TypeReference",
                                "typeName": "Uniform"
                            },
                            "questionToken": true
                        },
                        {
                            "kind": "PropertySignature",
                            "name": "z",
                            "type": {
                                "kind": "NumberKeyword"
                            },
                            "questionToken": true
                        }
                    ]
                }
            ]
        }
    },
    "Vec2": {
        "kind": "InterfaceDeclaration",
        "name": "Vec2",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "x",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "y",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "clone",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "add",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "sub",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "args",
                        "dotDotDotToken": {
                            "kind": "DotDotDotToken"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "dot",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "dist",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "len",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "unit",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "normal",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "angle",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "lerp",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "t",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "toFixed",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "eq",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "str",
                "parameters": [],
                "type": {
                    "kind": "StringKeyword"
                }
            }
        ]
    },
    "Vec3": {
        "kind": "InterfaceDeclaration",
        "name": "Vec3",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "x",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "y",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "z",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "xy",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            }
        ]
    },
    "Vec4": {
        "kind": "InterfaceDeclaration",
        "name": "Vec4",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "x",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "y",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "z",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "w",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "Mat4": {
        "kind": "InterfaceDeclaration",
        "name": "Mat4",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "m",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "NumberKeyword"
                    }
                }
            },
            {
                "kind": "MethodSignature",
                "name": "clone",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "mult",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "m",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Mat4"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "multVec4",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "m",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec4"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "multVec3",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "m",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec3"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec3"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "multVec2",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "m",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "s",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "translate",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rotateX",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rotateY",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "rotateZ",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "invert",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            }
        ]
    },
    "Color": {
        "kind": "InterfaceDeclaration",
        "name": "Color",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "r",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "g",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "b",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "a",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "clone",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "lighten",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "darken",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "invert",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "isDark",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "isLight",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "eq",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "c",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Color"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                }
            }
        ]
    },
    "Quad": {
        "kind": "InterfaceDeclaration",
        "name": "Quad",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "x",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "y",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "w",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "h",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "scale",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "q",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Quad"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "clone",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "eq",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "q",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Quad"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                }
            }
        ]
    },
    "RNGValue": {
        "kind": "TypeAliasDeclaration",
        "name": "RNGValue",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "NumberKeyword"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            ]
        }
    },
    "RNG": {
        "kind": "InterfaceDeclaration",
        "name": "RNG",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "seed",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "gen",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "gen",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "RNGValue"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "gen",
                "typeParameters": [
                    {
                        "kind": "TypeParameter",
                        "name": "T",
                        "constraint": {
                            "kind": "TypeReference",
                            "typeName": "RNGValue"
                        }
                    }
                ],
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "a",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "T"
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "T"
                }
            }
        ]
    },
    "Rect": {
        "kind": "InterfaceDeclaration",
        "name": "Rect",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "p1",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "p2",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            }
        ]
    },
    "Line": {
        "kind": "InterfaceDeclaration",
        "name": "Line",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "p1",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "p2",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            }
        ]
    },
    "ClientID": {
        "kind": "TypeAliasDeclaration",
        "name": "ClientID",
        "type": {
            "kind": "NumberKeyword"
        }
    },
    "MsgHandler": {
        "kind": "TypeAliasDeclaration",
        "name": "MsgHandler",
        "type": {
            "kind": "FunctionType",
            "parameters": [
                {
                    "kind": "Parameter",
                    "name": "id",
                    "type": {
                        "kind": "TypeReference",
                        "typeName": "ClientID"
                    }
                },
                {
                    "kind": "Parameter",
                    "name": "data",
                    "type": {
                        "kind": "AnyKeyword"
                    }
                }
            ],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "Comp": {
        "kind": "InterfaceDeclaration",
        "name": "Comp",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "id",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "CompID"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Component ID (if left out won't be treated as a comp)."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "require",
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "CompID"
                    }
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "What other comps this comp depends on."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "add",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "AddEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "event that runs when host game obj is added to scene"
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "load",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "LoadEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Event that runs when host game obj is added to scene and game is loaded."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "update",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "UpdateEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Event that runs every frame."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "draw",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "DrawEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Event that runs every frame."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "destroy",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "DestroyEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Event that runs when obj is removed from scene."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "inspect",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "InspectEvent"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Debug info for inspect mode."
                    }
                ]
            }
        ]
    },
    "GameObjID": {
        "kind": "TypeAliasDeclaration",
        "name": "GameObjID",
        "type": {
            "kind": "NumberKeyword"
        }
    },
    "CompID": {
        "kind": "TypeAliasDeclaration",
        "name": "CompID",
        "type": {
            "kind": "StringKeyword"
        }
    },
    "AddEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "AddEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "LoadEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "LoadEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "DrawEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "DrawEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "UpdateEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "UpdateEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "DestroyEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "DestroyEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "VoidKeyword"
            }
        }
    },
    "InspectEvent": {
        "kind": "TypeAliasDeclaration",
        "name": "InspectEvent",
        "type": {
            "kind": "FunctionType",
            "parameters": [],
            "type": {
                "kind": "AnyKeyword"
            }
        }
    },
    "PosCompInspect": {
        "kind": "InterfaceDeclaration",
        "name": "PosCompInspect",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "pos",
                "type": {
                    "kind": "StringKeyword"
                }
            }
        ]
    },
    "PosComp": {
        "kind": "InterfaceDeclaration",
        "name": "PosComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "pos",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "move",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "xVel",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "yVel",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Move how many pixels per second."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "move",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "vel",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "moveTo",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "dest",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "speed",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Move to a spot with a speed (pixels per second), teleports if speed is left out."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "screenPos",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get position on screen after camera transform."
                    }
                ]
            }
        ]
    },
    "ScaleComp": {
        "kind": "InterfaceDeclaration",
        "name": "ScaleComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "scale",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                }
            }
        ]
    },
    "RotateComp": {
        "kind": "InterfaceDeclaration",
        "name": "RotateComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "angle",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Angle in degrees."
                    }
                ]
            }
        ]
    },
    "ColorComp": {
        "kind": "InterfaceDeclaration",
        "name": "ColorComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "color",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            }
        ]
    },
    "OriginComp": {
        "kind": "InterfaceDeclaration",
        "name": "OriginComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "origin",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "Origin"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Origin point for render."
                    }
                ]
            }
        ]
    },
    "LayerCompInspect": {
        "kind": "InterfaceDeclaration",
        "name": "LayerCompInspect",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "layer",
                "type": {
                    "kind": "StringKeyword"
                }
            }
        ]
    },
    "LayerComp": {
        "kind": "InterfaceDeclaration",
        "name": "LayerComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "layer",
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Which layer this game obj belongs to."
                    }
                ]
            }
        ]
    },
    "RectSide": {
        "kind": "TypeAliasDeclaration",
        "name": "RectSide",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "top",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "bottom",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "left",
                        "hasExtendedUnicodeEscape": false
                    }
                },
                {
                    "kind": "LiteralType",
                    "literal": {
                        "kind": "StringLiteral",
                        "text": "right",
                        "hasExtendedUnicodeEscape": false
                    }
                }
            ]
        }
    },
    "PushOut": {
        "kind": "InterfaceDeclaration",
        "name": "PushOut",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "obj",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "GameObj",
                    "typeArguments": [
                        {
                            "kind": "AnyKeyword"
                        }
                    ]
                }
            },
            {
                "kind": "PropertySignature",
                "name": "side",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "RectSide"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "dis",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "AreaComp": {
        "kind": "InterfaceDeclaration",
        "name": "AreaComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "area",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Rect"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Rectangular collider area."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "areaWidth",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the width of collider area."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "areaHeight",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the height of collider area."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "isClicked",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If was just clicked on last frame."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "isHovered",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If is being hovered on."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "isCollided",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "o",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If is currently colliding with another game obj."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "isOverlapped",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "o",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If is currently overlapping with another game obj."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "clicks",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event runs when clicked."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "hovers",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event runs when hovered."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "collides",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "o",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event runs when collides with another game obj with certain tag."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "overlaps",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Tag"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "o",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Registers an event runs when overlaps with another game obj with certain tag."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "hasPt",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "p",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "Vec2"
                        }
                    }
                ],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If has a certain point inside collider."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "pushOut",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "obj",
                        "type": {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        }
                    }
                ],
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "PushOut"
                        },
                        {
                            "kind": "LiteralType",
                            "literal": {
                                "kind": "NullKeyword"
                            }
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Push out from another solid game obj if currently overlapping."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "pushOutAll",
                "parameters": [],
                "type": {
                    "kind": "ArrayType",
                    "elementType": {
                        "kind": "TypeReference",
                        "typeName": "PushOut"
                    }
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Push out from all other solid game objs if currently overlapping."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "worldArea",
                "parameters": [],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Rect"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get the geometry data for the collider in world coordinate space."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "_checkCollisions",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "_checkOverlaps",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "tag",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [
                                {
                                    "kind": "Parameter",
                                    "name": "obj",
                                    "type": {
                                        "kind": "TypeReference",
                                        "typeName": "GameObj",
                                        "typeArguments": [
                                            {
                                                "kind": "AnyKeyword"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "SpriteCompConf": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteCompConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "quad",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                },
                "questionToken": true
            },
            {
                "kind": "PropertySignature",
                "name": "frame",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Initial frame."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "animSpeed",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "How much time each frame should stay."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "tiled",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If provided width and height, don't stretch but instead render tiled."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Stretch sprite to a certain width."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Stretch sprite to a certain height."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "flipX",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Flip texture horizontally."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "flipY",
                "type": {
                    "kind": "BooleanKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Flip texture vertically."
                    }
                ]
            }
        ]
    },
    "SpriteCurAnim": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteCurAnim",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "name",
                "type": {
                    "kind": "StringKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "loop",
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "timer",
                "type": {
                    "kind": "NumberKeyword"
                }
            }
        ]
    },
    "SpriteComp": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Width for sprite."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Height for sprite."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "animSpeed",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "How much time each frame should stay."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "frame",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "the current frame"
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "quad",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Quad"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The rectangular area to render."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "play",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "anim",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "loop",
                        "type": {
                            "kind": "BooleanKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Play a piece of anim."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "stop",
                "parameters": [],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Stop current anim."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "numFrames",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get total number of frames."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "curAnim",
                "parameters": [],
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Get current anim name."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "flipX",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "BooleanKeyword"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Flip texture horizontally."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "flipY",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "b",
                        "type": {
                            "kind": "BooleanKeyword"
                        }
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Flip texture vertically."
                    }
                ]
            }
        ]
    },
    "SpriteCompInspect": {
        "kind": "InterfaceDeclaration",
        "name": "SpriteCompInspect",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "curAnim",
                "type": {
                    "kind": "StringKeyword"
                },
                "questionToken": true
            }
        ]
    },
    "TextComp": {
        "kind": "InterfaceDeclaration",
        "name": "TextComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "text",
                "type": {
                    "kind": "StringKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The text to render."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "textSize",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The text size."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "font",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "StringKeyword"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "FontData"
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The font to use."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Width of text."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Height of text."
                    }
                ]
            }
        ]
    },
    "TextCompConf": {
        "kind": "InterfaceDeclaration",
        "name": "TextCompConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "size",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Height of text."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "font",
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "StringKeyword"
                        },
                        {
                            "kind": "TypeReference",
                            "typeName": "FontData"
                        }
                    ]
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "The font to use."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Wrap text to a certain width."
                    }
                ]
            }
        ]
    },
    "RectComp": {
        "kind": "InterfaceDeclaration",
        "name": "RectComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "width",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Width of rect."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "height",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Height of height."
                    }
                ]
            }
        ]
    },
    "OutlineComp": {
        "kind": "InterfaceDeclaration",
        "name": "OutlineComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "lineWidth",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "lineColor",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Color"
                }
            }
        ]
    },
    "Debug": {
        "kind": "InterfaceDeclaration",
        "name": "Debug",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "paused",
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "inspect",
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "timeScale",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "showLog",
                "type": {
                    "kind": "BooleanKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "fps",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "objCount",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "drawCalls",
                "parameters": [],
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "stepFrame",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "clearLog",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "log",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "msg",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Log some text to screen."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "error",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "msg",
                        "type": {
                            "kind": "StringKeyword"
                        }
                    }
                ],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "UniformValue": {
        "kind": "TypeAliasDeclaration",
        "name": "UniformValue",
        "type": {
            "kind": "UnionType",
            "types": [
                {
                    "kind": "TypeReference",
                    "typeName": "Vec2"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "Vec3"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "Color"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "Mat4"
                }
            ]
        }
    },
    "Uniform": {
        "kind": "TypeAliasDeclaration",
        "name": "Uniform",
        "type": {
            "kind": "TypeReference",
            "typeName": "Record",
            "typeArguments": [
                {
                    "kind": "StringKeyword"
                },
                {
                    "kind": "TypeReference",
                    "typeName": "UniformValue"
                }
            ]
        }
    },
    "ShaderComp": {
        "kind": "InterfaceDeclaration",
        "name": "ShaderComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "uniform",
                "type": {
                    "kind": "TypeReference",
                    "typeName": "Uniform"
                }
            },
            {
                "kind": "PropertySignature",
                "name": "shader",
                "type": {
                    "kind": "StringKeyword"
                }
            }
        ]
    },
    "BodyComp": {
        "kind": "InterfaceDeclaration",
        "name": "BodyComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "jumpForce",
                "type": {
                    "kind": "NumberKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Initial speed in pixels per second for jump()."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "curPlatform",
                "parameters": [],
                "type": {
                    "kind": "UnionType",
                    "types": [
                        {
                            "kind": "TypeReference",
                            "typeName": "GameObj",
                            "typeArguments": [
                                {
                                    "kind": "AnyKeyword"
                                }
                            ]
                        },
                        {
                            "kind": "LiteralType",
                            "literal": {
                                "kind": "NullKeyword"
                            }
                        }
                    ]
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Current platform landing on."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "grounded",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If currently landing on a platform."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "falling",
                "parameters": [],
                "type": {
                    "kind": "BooleanKeyword"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "If currently falling."
                    }
                ]
            },
            {
                "kind": "MethodSignature",
                "name": "jump",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "f",
                        "type": {
                            "kind": "NumberKeyword"
                        },
                        "questionToken": true
                    }
                ],
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Upward thrust."
                    }
                ]
            }
        ]
    },
    "BodyCompConf": {
        "kind": "InterfaceDeclaration",
        "name": "BodyCompConf",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "jumpForce",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Initial speed in pixels per second for jump()."
                    }
                ]
            },
            {
                "kind": "PropertySignature",
                "name": "maxVel",
                "type": {
                    "kind": "NumberKeyword"
                },
                "questionToken": true,
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Maximum velocity when falling."
                    }
                ]
            }
        ]
    },
    "Timer": {
        "kind": "InterfaceDeclaration",
        "name": "Timer",
        "members": [
            {
                "kind": "PropertySignature",
                "name": "time",
                "type": {
                    "kind": "NumberKeyword"
                }
            },
            {
                "kind": "MethodSignature",
                "name": "action",
                "parameters": [],
                "type": {
                    "kind": "VoidKeyword"
                }
            }
        ]
    },
    "undefined": {
        "kind": "EmptyStatement"
    },
    "TimerComp": {
        "kind": "InterfaceDeclaration",
        "name": "TimerComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "MethodSignature",
                "name": "wait",
                "parameters": [
                    {
                        "kind": "Parameter",
                        "name": "n",
                        "type": {
                            "kind": "NumberKeyword"
                        }
                    },
                    {
                        "kind": "Parameter",
                        "name": "cb",
                        "type": {
                            "kind": "FunctionType",
                            "parameters": [],
                            "type": {
                                "kind": "VoidKeyword"
                            }
                        }
                    }
                ],
                "type": {
                    "kind": "TypeReference",
                    "typeName": "EventCanceller"
                },
                "jsDoc": [
                    {
                        "kind": "JSDocComment",
                        "comment": "Run the callback after n seconds."
                    }
                ]
            }
        ]
    },
    "SolidComp": {
        "kind": "InterfaceDeclaration",
        "name": "SolidComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "solid",
                "type": {
                    "kind": "BooleanKeyword"
                }
            }
        ]
    },
    "FixedComp": {
        "kind": "InterfaceDeclaration",
        "name": "FixedComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "fixed",
                "type": {
                    "kind": "BooleanKeyword"
                }
            }
        ]
    },
    "StayComp": {
        "kind": "InterfaceDeclaration",
        "name": "StayComp",
        "heritageClauses": [
            {
                "kind": "HeritageClause",
                "token": 94,
                "types": [
                    {
                        "kind": "ExpressionWithTypeArguments",
                        "expression": {
                            "kind": "Identifier",
                            "escapedText": "Comp"
                        }
                    }
                ]
            }
        ],
        "members": [
            {
                "kind": "PropertySignature",
                "name": "stay",
                "type": {
                    "kind": "BooleanKeyword"
                }
            }
        ]
    }
}